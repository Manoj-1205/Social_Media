Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	
+++ b/src/Main.java	
@@ -18,80 +18,26 @@
     private static FeedRepository feedRepository=new FeedRepository();
     private static VotingTracker votingTracker=new VotingTracker();
     public static void main(String[] args){
-        User user1=new User(1L, "Manoj", new ArrayList<>(), new ArrayList<>());
-        User user2=new User(2L, "Sam", new ArrayList<>(), new ArrayList<>());
-        User user3=new User(3L, "Praveen", new ArrayList<>(), new ArrayList<>());
-        User user4=new User(4L, "Anto", new ArrayList<>(), new ArrayList<>());
-//        Post post=new Post(user1, "Getting 1% Better every day", 0,0,new ArrayList<>());
-
-        Post post1 = Post.builder()
-                .user(user1)
-                .content("Getting 1% Better every day")
-                .build();
-
-        System.out.println("Post created time "+post1.getCreatedTime());
-
-        Post post2 = Post.builder()
-                .user(user1)
-                .content("Chase your dreams")
-                .build();
-        Post post3 = Post.builder()
-                .user(user2)
-                .content("All I want is cake")
-                .build();
-
-        Post post4 = Post.builder()
-                .user(user3)
-                .content("Friends Electrical")
-                .build();
-
-
-
+        //Instance for social network
         SocialNetwork socialNetwork=new SocialNetwork(userRepository, sessionRepository, feedRepository, votingTracker);
-
-        socialNetwork.postFeed(post1);
-        socialNetwork.postFeed(post2);
-        socialNetwork.postFeed(post3);
-        socialNetwork.postFeed(post4);
-//        try {
-//            // Wait for 5 seconds
-//            Thread.sleep(5000);
-//        } catch (InterruptedException e) {
-//            e.printStackTrace();
-//        }
-
-        socialNetwork.upvotePost(1L, user1);
-        socialNetwork.upvotePost(2L, user1);
-        socialNetwork.downvotePost(2L, user2);
-        socialNetwork.downvotePost(2L, user1);
-
-
-        //user 1 follows user2
-        socialNetwork.follow(user1, user2);
-//        socialNetwork.follow(user1, user3);
-
-        //AddComment
-        socialNetwork.comment(user1, 1L, "Well Said!");
-        socialNetwork.comment(user2, 1L, "We can do it");
-        socialNetwork.comment(user2, 3L, "Share the cake");
-
-        socialNetwork.upvotePost(4L, user2);
-        socialNetwork.upvotePost(4L, user1);
-        socialNetwork.upvotePost(4L, user2);
-        socialNetwork.upvotePost(4L, user3);
-        //Reply comment
-
-        socialNetwork.reply(user1, 2L, "Great man");
-
-        socialNetwork.showNewsFeed(user1);
-
         //Console input
         while (true) {
 
+            if(sessionRepository.getCurrentUser()!=null){
+                System.out.println("\nCURRENT USER : "+sessionRepository.getCurrentUser().getUserName());
+            }
+            System.out.println("\nEnter the commands you want to execute");
 
-            System.out.println("Enter the commands you want to execute");
-            System.out.println("1.signup \n2.login \n3.post \n4.showNewsFeed \n5.follow " +
-                                "\n6.showUsers \n7.votePost");
+            System.out.println("""
+                    1.signup\s
+                    2.login\s
+                    3.post\s
+                    4.showNewsFeed\s
+                    5.follow\s
+                    6.showUsers\s
+                    7.votePost\s
+                    8.comment""");
+
             Scanner sc = new Scanner(System.in);
             String request = sc.nextLine();
             switch (request) {
@@ -105,10 +51,14 @@
                 case "login" -> {
                     System.out.println("Enter username: ");
                     String name = sc.nextLine();
+
                     if (!userRepository.getUserMap().containsKey(name)) {
                         System.out.println("Account not found. Please sign up first");
                         break;
                     }
+                    if(sessionRepository.getCurrentUser()!=null){
+                        socialNetwork.logout(sessionRepository.getCurrentUser());
+                    }
                     socialNetwork.login(userRepository.getUserMap().get(name));
                 }
                 case "post" -> {
@@ -150,8 +100,20 @@
                     Long postId = sc.nextLong();
                     System.out.println("Enter the content");
                     String content = sc.nextLine();
-                    socialNetwork.comment(sessionRepository.getCurrentUser(), postId, content);
+                    String test = sc.nextLine();
+                    socialNetwork.comment(sessionRepository.getCurrentUser(), postId, test);
 
+                }
+                case "reply" -> {
+                    System.out.println("Enter Comment Id to reply");
+                    Long commentId = sc.nextLong();
+                    System.out.println("Enter the content");
+                    String replyComment = sc.nextLine();
+                    socialNetwork.reply(sessionRepository.getCurrentUser(), commentId, replyComment);
+
+                }
+                default -> {
+                    System.out.println("Invalid Option.. Enter the complete command (Example : signup)");
                 }
 
             }
@@ -166,4 +128,71 @@
 //        socialNetwork.logout(user1);
 //        socialNetwork.login(user1);
 //        socialNetwork.login(user1);
-//        socialNetwork.login(user2);
\ No newline at end of file
+//        socialNetwork.login(user2);
+
+//        User user1=new User(1L, "Manoj", new ArrayList<>(), new ArrayList<>());
+//        User user2=new User(2L, "Sam", new ArrayList<>(), new ArrayList<>());
+//        User user3=new User(3L, "Praveen", new ArrayList<>(), new ArrayList<>());
+//        User user4=new User(4L, "Anto", new ArrayList<>(), new ArrayList<>());
+////        Post post=new Post(user1, "Getting 1% Better every day", 0,0,new ArrayList<>());
+//
+//        Post post1 = Post.builder()
+//                .user(user1)
+//                .content("Getting 1% Better every day")
+//                .build();
+//
+//        System.out.println("Post created time "+post1.getCreatedTime());
+//
+//        Post post2 = Post.builder()
+//                .user(user1)
+//                .content("Chase your dreams")
+//                .build();
+//        Post post3 = Post.builder()
+//                .user(user2)
+//                .content("All I want is cake")
+//                .build();
+//
+//        Post post4 = Post.builder()
+//                .user(user3)
+//                .content("Friends Electrical")
+//                .build();
+//
+//
+//
+
+//
+//        socialNetwork.postFeed(post1);
+//        socialNetwork.postFeed(post2);
+//        socialNetwork.postFeed(post3);
+//        socialNetwork.postFeed(post4);
+////        try {
+////            // Wait for 5 seconds
+////            Thread.sleep(5000);
+////        } catch (InterruptedException e) {
+////            e.printStackTrace();
+////        }
+//
+//        socialNetwork.upvotePost(1L, user1);
+//        socialNetwork.upvotePost(2L, user1);
+//        socialNetwork.downvotePost(2L, user2);
+//        socialNetwork.downvotePost(2L, user1);
+//
+//
+//        //user 1 follows user2
+//        socialNetwork.follow(user1, user2);
+////        socialNetwork.follow(user1, user3);
+//
+//        //AddComment
+//        socialNetwork.comment(user1, 1L, "Well Said!");
+//        socialNetwork.comment(user2, 1L, "We can do it");
+//        socialNetwork.comment(user2, 3L, "Share the cake");
+//
+//        socialNetwork.upvotePost(4L, user2);
+//        socialNetwork.upvotePost(4L, user1);
+//        socialNetwork.upvotePost(4L, user2);
+//        socialNetwork.upvotePost(4L, user3);
+//        //Reply comment
+//
+//        socialNetwork.reply(user1, 2L, "Great man");
+//
+//        socialNetwork.showNewsFeed(user1);
\ No newline at end of file
Index: src/models/SocialNetwork.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/models/SocialNetwork.java b/src/models/SocialNetwork.java
--- a/src/models/SocialNetwork.java	
+++ b/src/models/SocialNetwork.java	
@@ -25,11 +25,12 @@
             System.out.println("User already exist. Try a different username");
             return;
         }
-        System.out.println("Signed un successfully. Please log in.");
+        System.out.println("Signed up successfully. Please log in.");
         userRepository.save(user);
     }
 
     public void login(User user){
+
         if(!userRepository.getUserList().contains(user)){
             System.out.println("Account not found!. Please sign up first.");
             return;
@@ -47,7 +48,7 @@
             System.out.println("Failed Operation : User not logged in");
             return;
         }
-        System.out.println(user.getUserName()+ " User Logged out");
+        System.out.println("User "+user.getUserName()+ " Logged out");
         sessionRepository.setSessionStatusInactive(user);
     }
 
@@ -77,8 +78,9 @@
                 post.getCommentList().forEach(comments -> {
                             System.out.println(comments.getCommentId() + " " +
                                     comments.getAuthor().getUserName() + ": " + comments.getContent()
-                                    + " " + comments.commentCreatedTime(LocalDateTime.now(), comments.getTimeStamp())
+                                    + ", Updated " + comments.commentCreatedTime(LocalDateTime.now(), comments.getTimeStamp())
                                     +"\nUpvotes: "+comments.getUpvote()+" \nDownvotes: "+comments.getDownvote());
+
                             comments.getReplyList().forEach(reply -> System.out.println("\t"+reply.getCommentId() + " " +
                                     reply.getAuthor().getUserName() + ": " + reply.getContent()
                                     + " " + reply.commentCreatedTime(LocalDateTime.now(), reply.getTimeStamp())
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,19 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="b7547ec0-cf67-4989-b977-62ba9e73e776" name="Changes" comment="Followers, Following">
-      <change afterPath="$PROJECT_DIR$/src/generators/CommentIdGenerator.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/generators/UserIdGenerator.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/models/NewsFeedComparator.java" afterDir="false" />
+    <list default="true" id="b7547ec0-cf67-4989-b977-62ba9e73e776" name="Changes" comment="Console program test">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Repository/FeedRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Repository/FeedRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Repository/SessionRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Repository/SessionRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Repository/UserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Repository/UserRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/models/Comments.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/Comments.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/models/Post.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/Post.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Repository/PostRepository.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/models/SocialNetwork.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/SocialNetwork.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/models/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/models/User.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -28,6 +20,19 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <favorite-branches>
+      <branch-storage>
+        <map>
+          <entry type="LOCAL">
+            <value>
+              <list>
+                <branch-info repo="$PROJECT_DIR$" source="main" />
+              </list>
+            </value>
+          </entry>
+        </map>
+      </branch-storage>
+    </favorite-branches>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
         <entry key="$PROJECT_DIR$" value="main" />
@@ -128,7 +133,14 @@
       <option name="project" value="LOCAL" />
       <updated>1689930801003</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="Console program test">
+      <created>1690046029838</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1690046029838</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -147,6 +159,7 @@
     <MESSAGE value="VotingTracker" />
     <MESSAGE value="Login Functionality" />
     <MESSAGE value="Followers, Following" />
-    <option name="LAST_COMMIT_MESSAGE" value="Followers, Following" />
+    <MESSAGE value="Console program test" />
+    <option name="LAST_COMMIT_MESSAGE" value="Console program test" />
   </component>
 </project>
\ No newline at end of file
